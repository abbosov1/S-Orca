import logging
from aiogram import *
from aiogram.filters import StateFilter
from aiogram.types import (Message, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton,
                           ReactionTypeEmoji, CallbackQuery)
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.storage.memory import MemoryStorage
from keyboards import language_keyboard, main_menu, admin_menu, settings_menu, feedback_reply, rating_keyboard
from datebase import *

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
TOKEN = "6486958358:AAG3Txo1kM5g_4tz5VjKrSqWrsYDYFJciWY"
ADMIN_ID = 5445669072  # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram ID

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=MemoryStorage())


# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserStates(StatesGroup):
    waiting_for_review = State()
    waiting_for_contest_dates = State()
    waiting_for_contest_title = State()
    waiting_for_language = State()
    waiting_for_fullname = State()
    waiting_for_class = State()


# –ù–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
class AdminTestCreationStates(StatesGroup):
    choosing_subject = State()  # –í—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞
    choosing_class = State()  # –í—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞
    waiting_for_question = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞
    waiting_for_correct_answer = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    waiting_for_incorrect_answers = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
qqq

@dp.message(Command("state"))  # /state
async def check_state(message: Message, state: FSMContext):
    current_state = await state.get_state()
    await message.answer(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
    print(f"[LOG] –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM: {current_state}")


# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(CommandStart())
async def command_start(message: Message, state: FSMContext):
    user_id = message.from_user.id

    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))

    if user_id == ADMIN_ID:
        cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
        user_data = cursor.fetchone()

        if user_data:
            language = user_data[0]
            await message.answer(
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!" if language == "ru" else "Xush kelibsiz, administrator!",
                reply_markup=admin_menu[language]
            )
        else:
            await message.answer(
                "–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞! –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:" if message.from_user.language_code == "ru"
                else "Assalomu alaykum, botga xush kelibsiz! Tilni tanlang:",
                reply_markup=language_keyboard
            )
            await state.set_state(UserStates.waiting_for_language)

    else:
        cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
        user_data = cursor.fetchone()

        if user_data:
            language = user_data[0]
            await message.answer(
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!" if language == "ru" else "Xush kelibsiz!",
                reply_markup=main_menu[language]
            )
        else:
            await message.answer(
                "–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞! –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:" if message.from_user.language_code == "ru"
                else "Assalomu alaykum, botga xush kelibsiz! Tilni tanlang:",
                reply_markup=language_keyboard
            )
            await state.set_state(UserStates.waiting_for_language)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@dp.callback_query(lambda call: call.data.startswith("lang_"))
async def language_selected(call: CallbackQuery):
    user_id = call.from_user.id
    selected_language = "ru" if call.data == "lang_ru" else "uz"
    cursor.execute("INSERT INTO user (user_id, language) VALUES (?, ?) ON CONFLICT(user_id) DO UPDATE SET language = ?",
                   (user_id, selected_language, selected_language))
    conn.commit()

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä", request_contact=True)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await call.message.answer(
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:" if selected_language == "ru" else "Telefon raqamingizni yuboring:",
        reply_markup=keyboard
    )
    await call.answer()  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞


@dp.message(lambda message: message.contact)
async def phone_received(message: Message, state: FSMContext):
    user_id = message.from_user.id
    phone_number = message.contact.phone_number
    cursor.execute("UPDATE user SET phone = ? WHERE user_id = ?", (phone_number, user_id))
    conn.commit()

    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]

    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:" if language == "ru" else "Ismingizni kiriting:"
    )
    await state.set_state(UserStates.waiting_for_fullname)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(UserStates.waiting_for_fullname)
async def process_fullname(message: Message, state: FSMContext):
    fullname = message.text
    user_id = message.from_user.id

    cursor.execute("UPDATE user SET fullname = ? WHERE user_id = ?", (fullname, user_id))
    conn.commit()

    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]

    await message.answer(
        "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–ª–∞—Å—Å (1-11):" if language == "ru"
        else "Rahmat! Endi sinfingizni kiriting (1-11):"
    )
    await state.set_state(UserStates.waiting_for_class)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(UserStates.waiting_for_class)
async def process_class(message: Message, state: FSMContext):
    user_id = message.from_user.id
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]
    try:
        age = int(message.text)
        if 1 <= age <= 11:
            cursor.execute("UPDATE user SET age = ? WHERE user_id = ?", (age, user_id))
            conn.commit()

            await message.answer(
                "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:" if language == "ru"
                else "Ma'lumotlaringiz muvaffaqiyatli saqlandi. Menyudan amalni tanlang:",
                reply_markup=main_menu[language]
            )
            await state.clear()
        else:
            await message.answer(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å (1-11)." if language == "ru"
                else "Iltimos, to'g'ri sinfni kiriting (1-11)."
            )
    except ValueError:
        cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
        language = cursor.fetchone()[0]

        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–ª–∞—Å—Å–∞ (1-11) —Ü–∏—Ñ—Ä–∞–º–∏." if language == "ru"
            else "Iltimos, sinf raqamini (1-11) raqamlarda kiriting."
        )


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_language(user_id: int) -> str:
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    return result[0] if result else "ru"


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–æ–Ω–∫—É—Ä—Å—ã üî•"
@dp.message(lambda message: message.text in ["–ö–æ–Ω–∫—É—Ä—Å—ã üî•", "Olimpiadalar üî•"])
async def show_contests(message: Message):
    user_id = message.from_user.id
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]

    cursor.execute("SELECT title, start_date, end_date FROM contests WHERE status = 'active'")
    active_contests = cursor.fetchall()

    if active_contests:
        text = "üì¢ *–¢–µ–∫—É—â–∏–µ –∫–æ–Ω–∫—É—Ä—Å—ã:*\n\n" if language == "ru" else "üì¢ *Hozirgi olimpiadalar:*\n\n"
        for contest in active_contests:
            text += f"üìå *{contest[0]}*\nüìÖ {contest[1]} - {contest[2]}\n\n"
    else:
        text = "–ö–æ–Ω–∫—É—Ä—Å—ã —Å–∫–æ—Ä–æ –Ω–∞—á–Ω—É—Ç—Å—è, –ø–æ–∫–∞ —á—Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å!" if language == "ru" \
            else "Olimpiadalar tez orada boshlanadi, hozircha tayyorlaning!"

    await message.answer(text, parse_mode="Markdown")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–∫—É—Ä—Å—ã" (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
@dp.message(lambda message: message.text in ["–î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–∫—É—Ä—Å—ã", "Olimpiadalar qo'shish"])
async def add_contest(message: Message, state: FSMContext):
    if message.from_user.id != ADMIN_ID:
        return

    user_id = message.from_user.id
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]

    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—É—Ä—Å–∞:" if language == "ru" else "Olimpiada nomini kiriting:"
    )
    await state.set_state(UserStates.waiting_for_contest_title)


# –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–Ω–∫—É—Ä—Å–∞
@dp.message(UserStates.waiting_for_contest_title)
async def contest_title(message: Message, state: FSMContext):
    await state.update_data(title=message.text)
    user_id = message.from_user.id
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]

    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 01.02.2025 - 15.02.2025):" if language == "ru"
        else "O'tkazilish davrini kiriting (masala n: 01.02.2025 - 15.02.2025):"
    )
    await state.set_state(UserStates.waiting_for_contest_dates)


# –í–≤–æ–¥ –ø–µ—Ä–∏–æ–¥–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
@dp.message(UserStates.waiting_for_contest_dates)
async def contest_dates(message: Message, state: FSMContext):
    data = await state.get_data()
    title = data["title"]
    dates = message.text.split("-")

    if len(dates) != 2:
        await message.answer("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        return

    start_date, end_date = dates[0].strip(), dates[1].strip()
    cursor.execute("INSERT INTO contests (title, start_date, end_date, status) VALUES (?, ?, ?, 'active')",
                   (title, start_date, end_date))
    conn.commit()

    await message.answer("‚úÖ –ö–æ–Ω–∫—É—Ä—Å –¥–æ–±–∞–≤–ª–µ–Ω!")
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ‚úçÔ∏è"
@dp.message(lambda message: message.text in ["–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ‚úçÔ∏è", "Fikr bildirish ‚úçÔ∏è"])
async def leave_review(message: Message, state: FSMContext):
    user_id = message.from_user.id
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]

    await message.answer(
        "–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤ ‚úçÔ∏è:" if language == "ru" else "Fikringizni qoldiring ‚úçÔ∏è:"
    )
    await state.set_state(UserStates.waiting_for_review)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–∞
@dp.message(UserStates.waiting_for_review)
async def process_review(message: Message, state: FSMContext):
    user_id = message.from_user.id
    review_text = message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("INSERT INTO reviews (user_id, review) VALUES (?, ?)", (user_id, review_text))
    conn.commit()

    # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏—é üëç
    await message.react([ReactionTypeEmoji(emoji="üëç")])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]
    await message.answer(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤ ü§ù" if language == "ru" else "Fikringiz uchun rahmat ü§ù"
    )

    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É"
@dp.message(lambda message: message.text in ["–ü–æ–º–æ—â—å —Å –¥–æ–º–∞—à–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ–º", "Uyga vazifaga yordam"])
async def homework_help(message: Message, state: FSMContext):
    user_id = message.from_user.id

    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    user_language = cursor.fetchone()
    if user_language:
        user_language = user_language[0]
    else:
        user_language = "ru"  # –ï—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî —Ä—É—Å—Å–∫–∏–π

    # –ü—Ä–æ—Å–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ
    text = "–•–æ—Ä–æ—à–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏." if user_language == "ru" else "Yaxshi, rasmni yuboring."
    await message.answer(text)

    # –°—Ç–∞–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ
    await state.set_state("waiting_for_homework_photo")


@dp.message(StateFilter("waiting_for_homework_photo"),
            lambda message: message.photo and message.from_user.id != ADMIN_ID)
async def receive_homework_photo(message: Message, state: FSMContext):
    user_id = message.from_user.id

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º photo_id –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(photo_id=message.photo[-1].file_id)

    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    user_language = result[0] if result else "ru"

    # –ü—Ä–æ—Å–∏–º –Ω–∞–ø–∏—Å–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ
    text = (
        "–•–æ—Ä–æ—à–æ, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ —ç—Ç–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏–ª–∏ —Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Å –Ω–µ–π."
        if user_language == "ru"
        else "Yaxshi, ushbu rasm bilan bog'liq savolingizni yozing yoki nima qilish kerakligini tushuntiring."
    )
    await message.answer(text)

    # –°—Ç–∞–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
    await state.set_state("waiting_for_homework_question")


@dp.message(StateFilter("waiting_for_homework_question"))
async def receive_homework_question(message: Message, state: FSMContext):
    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    user_language = result[0] if result else "ru"

    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ —Ñ–æ—Ç–æ
    data = await state.get_data()
    photo_id = data.get("photo_id")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –≤–æ–ø—Ä–æ—Å–∞
    if message.text:
        # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–≤—ã–π
        question_text = message.text
        caption = (
            f"–í–æ–ø—Ä–æ—Å –ø–æ –¥–æ–º–∞—à–Ω–µ–º—É –∑–∞–¥–∞–Ω–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:\n\n{question_text}"
            if user_language == "ru"
            else f"Foydalanuvchidan {user_id} uyga vazifa bo'yicha savol:\n\n{question_text}"
        )
        admin_message = await bot.send_photo(ADMIN_ID, photo_id, caption=caption)
    elif message.voice:
        # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –≥–æ–ª–æ—Å–æ–≤–æ–π
        caption = (
            f"–í–æ–ø—Ä–æ—Å –ø–æ –¥–æ–º–∞—à–Ω–µ–º—É –∑–∞–¥–∞–Ω–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
            if user_language == "ru"
            else f"Foydalanuvchidan {user_id} uyga vazifa bo'yicha savol: ovozli xabar"
        )
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
        admin_message = await bot.send_photo(ADMIN_ID, photo_id, caption=caption)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞–º–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.send_voice(ADMIN_ID, message.voice.file_id)
    else:
        error_text = (
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º."
            if user_language == "ru"
            else "Iltimos, savolingizni matn yoki ovozli xabar ko‚Äòrinishida yuboring."
        )
        await message.answer(error_text)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–≤—è–∑—å –º–µ–∂–¥—É ID —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω—É, –∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute(
        "INSERT INTO forwarded_messages (user_id, forwarded_message_id) VALUES (?, ?)",
        (user_id, admin_message.message_id)
    )
    conn.commit()

    # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
    confirmation_text = (
        "–í–∞—à –≤–æ–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞."
        if user_language == "ru"
        else "Savolingiz administratorga yuborildi. Iltimos, javobni kuting."
    )
    await message.answer(confirmation_text)

    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
@dp.message(lambda message: message.from_user.id == ADMIN_ID and message.text in [
    "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "Foydalanovchilar ro'yhati",
    "–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç—ã", "Testlarni qo'shish"
])
async def handle_admin_commands(message: Message):
    if message.text in ["–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "Foydalanovchilar ro'yhati"]:
        await list_users(message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º)
@dp.message(StateFilter(None), lambda message: message.from_user.id == ADMIN_ID)
async def handle_admin_message(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π ‚Äî –µ—Å–ª–∏ –¥–∞, –≤—ã—Ö–æ–¥–∏–º
    admin_commands = ["–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "Foydalanovchilar ro'yhati", "Testlarni qo'shish"]
    if message.text in admin_commands:
        return

    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    cursor.execute(
        "SELECT user_id FROM forwarded_messages WHERE forwarded_message_id = ?",
        (message.reply_to_message.message_id,)
    )
    result = cursor.fetchone()

    if result:
        original_sender_id = result[0]
        logging.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {original_sender_id}")

        # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("SELECT language FROM user WHERE user_id = ?", (original_sender_id,))
        language_result = cursor.fetchone()
        language = language_result[0] if language_result else "ru"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ (–¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è)
        if message.text:
            reply_text = (
                f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: \n\n{message.text}\n\n"
                f"–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è "
                f"–æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É '–í–æ–ø—Ä–æ—Å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É'."
                if language == "ru"
                else f"Adminstratordan javob: \n\n{message.text}\n\n"
                     f"Bu bot 24/7 ishlaydi. Rasmlarni yuboring yoki "
                     f"'Adminstratorga savol' tugmasini bosib, savolingizni yuboring."
            )
            await bot.send_message(original_sender_id, reply_text, reply_markup=main_menu[language])

        # –û—Ç–≤–µ—Ç —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π
        elif message.photo:
            await bot.send_photo(
                original_sender_id,
                message.photo[-1].file_id,
                caption=(f"–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {message.caption or '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞'}\n\n–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7. "
                         f"–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, "
                         f"–Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É '–í–æ–ø—Ä–æ—Å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É'."
                         if language == "ru"
                         else f"Adminstratordan javob: {message.caption or 'Matn yo\'q'}\n\nBu bot 24/7 ishlaydi. "
                              f"Rasmlarni yuboring yoki 'Adminstratorga savol' "
                              f"tugmasini bosib, savolingizni yuboring."),
                reply_markup=main_menu[language]
            )

        # –û—Ç–≤–µ—Ç —Å –≥–æ–ª–æ—Å–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        elif message.voice:
            await bot.send_voice(
                original_sender_id,
                message.voice.file_id,
                caption=("–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7. –£ –≤–∞—Å –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã? "
                         "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É, –µ—Å–ª–∏ —É –≤–∞—Å —Å–Ω–æ–≤–∞ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏."
                         if language == "ru"
                         else "Bu bot 24/7 ishlaydi. Yana savollaringiz bormi? "
                              "Yana muammo yuzaga kelsa, murojaat qilishingiz mumkin."),
                reply_markup=main_menu[language]
            )

        # –û—Ç–≤–µ—Ç —Å –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ–º
        elif message.video:
            await bot.send_video(
                original_sender_id,
                message.video.file_id,
                caption=("–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7. –£ –≤–∞—Å –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã? "
                         "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É, –µ—Å–ª–∏ —É –≤–∞—Å —Å–Ω–æ–≤–∞ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏."
                         if language == "ru"
                         else "Bu bot 24/7 ishlaydi. Yana savollaringiz bormi? "
                              "Yana muammo yuzaga kelsa, murojaat qilishingiz mumkin."),
                reply_markup=main_menu[language]
            )

        # –û—Ç–≤–µ—Ç —Å —Ñ–∞–π–ª–æ–º
        elif message.document:
            await bot.send_document(
                original_sender_id,
                message.document.file_id,
                caption=("–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7. –£ –≤–∞—Å –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã? "
                         "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É, –µ—Å–ª–∏ —É –≤–∞—Å —Å–Ω–æ–≤–∞ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏."
                         if language == "ru"
                         else "Bu bot 24/7 ishlaydi. Yana savollaringiz bormi? "
                              "Yana muammo yuzaga kelsa, murojaat qilishingiz mumkin."),
                reply_markup=main_menu[language]
            )

        # –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ ‚Äì –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞–ø—Ä–æ—Å:
        # ¬´–£ –≤–∞—Å –µ—Å—Ç—å –µ—â—ë –≤–æ–ø—Ä–æ—Å—ã?¬ª —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏ (–î–∞/–ù–µ—Ç)
        followup_text = "–£ –≤–∞—Å –µ—Å—Ç—å –µ—â—ë –≤–æ–ø—Ä–æ—Å—ã?" if language == "ru" else "Sizda yana savollar bormi?"
        await bot.send_message(original_sender_id, followup_text, reply_markup=feedback_reply[language])

        await message.reply("–í–∞—à –æ—Ç–≤–µ—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é." if language == "ru"
                            else "Javobingiz foydalanuvchiga yuborildi.")
    else:
        await message.reply("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "–í–æ–ø—Ä–æ—Å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"
@dp.message(lambda message: message.text in ["–í–æ–ø—Ä–æ—Å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É", "Adminstratorga savol"])
async def handle_questions(message: Message, state: FSMContext):
    user_id = message.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    user_language = cursor.fetchone()
    if user_language:
        user_language = user_language[0]
    else:
        user_language = "ru"  # –ï—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî —Ä—É—Å—Å–∫–∏–π

    # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–æ–º, —á—Ç–æ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–∫ —Ç–µ–∫—Å—Ç, —Ç–∞–∫ –∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if user_language == "uz":
        await message.answer(
            "Yaxshi, savollaringizni matn yoki ovozli xabar ko‚Äòrinishida "
            "yuborishingiz mumkin, men ularni administratorga yuboraman.")
    else:
        await message.answer(
            "–•–æ—Ä–æ—à–æ, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ "
            "–≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –∏ —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
    await state.set_state("waiting_for_question")


# ---------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–µ–∫—Å—Ç –∏–ª–∏ –≥–æ–ª–æ—Å)
@dp.message(StateFilter("waiting_for_question"))
async def process_question(message: Message, state: FSMContext):
    user_id = message.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    user_language = result[0] if result else "ru"

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message.text:
        if user_language == "uz":
            forwarded_message = await bot.send_message(
                ADMIN_ID,
                f"Foydalanuvchidan savol: {user_id}\n\n{message.text}",
            )
            await message.answer("Savolingiz administratorga yuborildi. Iltimos, javobni kuting.")
        else:
            forwarded_message = await bot.send_message(
                ADMIN_ID,
                f"–í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:\n\n{message.text}",
            )
            await message.answer("–í–∞—à –≤–æ–ø—Ä–æ—Å –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    elif message.voice:
        if user_language == "uz":
            caption = f"Foydalanuvchidan savol: {user_id} (ovozli xabar)"
            forwarded_message = await bot.send_voice(
                ADMIN_ID,
                message.voice.file_id,
                caption=caption
            )
            await message.answer("Savolingiz administratorga yuborildi. Iltimos, javobni kuting.")
        else:
            caption = f"–í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: (–≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)"
            forwarded_message = await bot.send_voice(
                ADMIN_ID,
                message.voice.file_id,
                caption=caption
            )
            await message.answer("–í–∞—à –≤–æ–ø—Ä–æ—Å –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
    else:
        error_text = (
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
            if user_language == "ru"
            else "Iltimos, matn yoki ovozli xabar yuboring."
        )
        await message.answer(error_text)
        return

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute(
        "INSERT INTO forwarded_messages (forwarded_message_id, user_id) VALUES (?, ?)",
        (forwarded_message.message_id, user_id)
    )
    conn.commit()

    # –û—á–∏—Å—Ç–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()


# ---------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
@dp.message(lambda message: message.chat.id == ADMIN_ID)
async def handle_admin_reply(message: Message):
    if not message.reply_to_message:
        return await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å –æ—Ç–≤–µ—Ç —Å –≤–æ–ø—Ä–æ—Å–æ–º.")

    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å –¥–∞–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –ø–æ –±–∞–∑–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    forwarded_message_id = message.reply_to_message.message_id
    cursor.execute(
        "SELECT user_id FROM forwarded_messages WHERE forwarded_message_id = ?",
        (forwarded_message_id,)
    )
    result = cursor.fetchone()
    if not result:
        return await message.reply("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è.")

    original_user_id = result[0]
    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –≤–æ–ø—Ä–æ—Å–∞)
    cursor.execute("UPDATE user SET question_sent = 0 WHERE user_id = ?", (original_user_id,))
    conn.commit()

    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (original_user_id,))
    lang_result = cursor.fetchone()
    language = lang_result[0] if lang_result else "ru"

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message.text:
        await bot.send_message(
            original_user_id,
            f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n{message.text}"
        )
    elif message.voice:
        await bot.send_voice(
            original_user_id,
            message.voice.file_id,
            caption="–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:"
        )
    elif message.photo:
        await bot.send_photo(
            original_user_id,
            message.photo[-1].file_id,
            caption=f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {message.caption or '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞'}"
        )
    else:
        await bot.send_message(
            original_user_id,
            "–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω."
        )

    # –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ ‚Äì –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞–ø—Ä–æ—Å:
    # ¬´–£ –≤–∞—Å –µ—Å—Ç—å –µ—â—ë –≤–æ–ø—Ä–æ—Å—ã?¬ª —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–î–∞/–ù–µ—Ç"
    followup_text = "–£ –≤–∞—Å –µ—Å—Ç—å –µ—â—ë –≤–æ–ø—Ä–æ—Å—ã?" if language == "ru" else "Sizda yana savollar bormi?"
    await bot.send_message(original_user_id, followup_text, reply_markup=feedback_reply[language])

    await message.reply("–í–∞—à –æ—Ç–≤–µ—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é." if language == "ru"
                        else "Javobingiz foydalanuvchiga yuborildi.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∑–∞–ø—Ä–æ—Å ¬´–£ –≤–∞—Å –µ—Å—Ç—å –µ—â—ë –≤–æ–ø—Ä–æ—Å—ã?¬ª
@dp.message(lambda message: message.text in ["–î–∞", "Ha", "–ù–µ—Ç", "Yo'q"])
async def followup_handler(message: Message, state: FSMContext):
    user_id = message.from_user.id

    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    language = result[0] if result else "ru"

    if message.text in ["–î–∞", "Ha"]:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª "–î–∞" ‚Äì –ø—Ä–æ—Å–∏–º —Å—Ä–∞–∑—É –≤–≤–µ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å
        text = "–•–æ—Ä–æ—à–æ, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å." if language == "ru" else "Yaxshi, savolingizni yozing."
        await message.answer(text)
        await state.set_state("waiting_for_question")
    else:
        # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç "–ù–µ—Ç" ‚Äì –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞
        text = "–•–æ—Ä–æ—à–æ, —Ç–æ–≥–¥–∞ –æ—Ü–µ–Ω–∏—Ç–µ A'lochi bot." if language == "ru" \
            else "Yaxshi, unday bo'lsa A'lochi botni baholang."
        await message.answer(text, reply_markup=rating_keyboard[language])


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ü–µ–Ω–∫–∏ (–Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ —Å 1-5 –∑–≤—ë–∑–¥–∞–º–∏)
@dp.message(lambda message: message.text in ["1 ‚≠ê", "2 ‚≠ê", "3 ‚≠ê", "4 ‚≠ê", "5 ‚≠ê"])
async def rating_handler(message: Message):
    user_id = message.from_user.id

    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    language = result[0] if result else "ru"

    thank_text = "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É!" if language == "ru" else "Baholaganingiz uchun, raxmat!"
    await message.answer(thank_text, reply_markup=main_menu[language])


# –ö–æ–º–∞–Ω–¥–∞ "–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ"
@dp.message(lambda message: message.text in ["–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ", "Mening ma'lumotlarim"])
async def my_data(message: Message):
    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –≤–∫–ª—é—á–∞—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    cursor.execute("SELECT fullname, age, language, phone FROM user WHERE user_id = ?", (user_id,))
    user_data = cursor.fetchone()

    if user_data:
        fullname, age, language, phone = user_data

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if language == "ru":
            response = f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n–ò–º—è: {fullname}\n–ö–ª–∞—Å—Å: {age}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone}"
        else:  # –î–ª—è —É–∑–±–µ–∫—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
            response = f"Sizning ma'lumotlaringiz:\nIsmingiz: {fullname}\nSinf: {age}\nTelefon: {phone}"

        await message.answer(response, reply_markup=main_menu[language])
    else:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'ru')
        default_language = "ru"
        await message.answer(
            "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ."
            if default_language == "ru"
            else "Siz hali ro'yxatdan o'tmagansiz. Iltimos, avval ma'lumotlaringizni kiriting.",
            reply_markup=main_menu[default_language]
        )


# –ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@dp.message(lambda message: message.from_user.id == ADMIN_ID and message.text == "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
async def list_users(message: Message):
    cursor.execute("SELECT user_id, fullname, age, language FROM user")
    users = cursor.fetchall()

    if users:
        user_list = "\n".join([f"ID: {user[0]}, –ò–º—è: {user[1]}, –ö–ª–∞—Å—Å: {user[2]}" for user in users])
        language = users[0][3]  # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        await message.answer(
            f"–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{user_list}" if language == "ru"
            else f"Foydalanuvchilar ro'yxati:\n{user_list}"
        )
    else:
        language = users[0][3]  # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer(
            "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö." if language == "ru"
            else "Ma'lumotlar bazasida foydalanuvchilar yo'q."
        )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@dp.message(lambda message: message.from_user.id == ADMIN_ID and message.text == "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
async def list_users(message: Message):
    user_id = message.from_user.id

    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]

    cursor.execute("SELECT user_id, fullname, age FROM user")
    users = cursor.fetchall()

    if users:
        user_list = "\n".join([f"ID: {user[0]}, –ò–º—è: {user[1]}, –ö–ª–∞—Å—Å: {user[2]}" for user in users])
        await message.answer(
            f"–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{user_list}" if language == "ru" else f"Foydalanuvchilar ro'yxati:\n{user_list}",
            reply_markup=admin_menu[language])
    else:
        await message.answer(
            "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö." if language == "ru" else "Ma'lumotlar bazasida foydalanuvchilar yo'q.",
            reply_markup=admin_menu[language])


# –ö–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" –∏–ª–∏ "Sozlamalar"
@dp.message(lambda message: message.text in ["–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "Sozlamalar"])
async def settings_handler(message: Message):
    user_id = message.from_user.id
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]  # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:" if language == "ru" else "Buyruqni tanlang:",
        reply_markup=settings_menu[language]
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞
@dp.message(lambda message: message.text in ["–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", "Tilni o'zgartirish"])
async def change_language(message: Message):
    user_id = message.from_user.id
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]

    lang_selection = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π", callback_data="lang_ru")],
        [InlineKeyboardButton(text="O'zbekcha", callback_data="lang_uz")]
    ])

    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:" if language == "ru" else "Tilni tanlang:",
        reply_markup=lang_selection
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.message(lambda message: message.text in ["–ù–∞–∑–∞–¥", "Orqaga"])
async def back_to_main_menu(message: Message):
    user_id = message.from_user.id
    cursor.execute("SELECT language FROM user WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0]  # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    await message.answer(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:" if language == "ru" else "Asiya menyu:",
        reply_markup=main_menu[language]  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    import asyncio

    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    asyncio.run(dp.start_polling(bot))
